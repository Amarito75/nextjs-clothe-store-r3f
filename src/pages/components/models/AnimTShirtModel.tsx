/*
  Auto-generated by Spline
*/

import useSpline from "@splinetool/r3f-spline";
import { OrthographicCamera, useScroll } from "@react-three/drei";
import { useLayoutEffect, useRef } from "react";
import * as three from "three";
import gsap from "gsap";
import { useFrame } from "@react-three/fiber";

export default function Scene({ ...props }) {
  const { nodes, materials } = useSpline(
    "https://prod.spline.design/1CKOeSq4PdkQCBiC/scene.splinecode"
  );

  const tshirt = useRef<THREE.Group>(null!);
  const scroll = useScroll();
  const tl = useRef<gsap.core.Timeline>();
  useFrame((state, delta) => {
    if (scroll && tl.current) {
      tl.current.seek(scroll.offset * tl.current.duration());
    }
  });

  useLayoutEffect(() => {
    tl.current = gsap.timeline({
      defaults: { duration: 2, ease: "power1.inOut" },
    });
    tl.current
      .to(tshirt.current.rotation, { y: 1 }, 2)
      .to(tshirt.current.position, { x: 1 }, 2)

      .to(tshirt.current.rotation, { y: 1 }, 6)
      .to(tshirt.current.position, { x: 200 }, 6)

      .to(tshirt.current.rotation, { y: 1 }, 11)
      .to(tshirt.current.rotation, { x: 1 }, 11)
      .to(tshirt.current.position, { x: 200 }, 11)

      .to(tshirt.current.rotation, { y: 1 }, 13)
      .to(tshirt.current.rotation, { x: 1 }, 13)
      .to(tshirt.current.position, { x: 200 }, 13)

      .to(tshirt.current.rotation, { y: 0 }, 16)
      .to(tshirt.current.rotation, { x: 0 }, 16)
      .to(tshirt.current.position, { x: 0 }, 16)

      .to(tshirt.current.rotation, { y: 0 }, 20)
      .to(tshirt.current.rotation, { x: 0 }, 20)
      .to(tshirt.current.position, { x: 0 }, 20);
  }, []);

  return (
    <>
      <color attach="background" args={["#979797"]} />
      <group {...props} dispose={null}>
        <directionalLight
          name="Directional Light"
          intensity={0.75}
          shadow-mapSize-width={1024}
          shadow-mapSize-height={1024}
          shadow-camera-near={-10000}
          shadow-camera-far={100000}
          position={[850003.92, 1299996.45, 1001635.31]}
          rotation={[0, 0, 0]}
          scale={1}
        />
        <ambientLight intensity={0.2} />
        <group name="male_tshirt" ref={tshirt}>
          <mesh
            name="male_tshirt1"
            geometry={nodes.male_tshirt1.geometry}
            material={materials.Tshirt}
            castShadow
            receiveShadow
            position={[3.19, 41.43, -3.94]}
            rotation={[0, -0.03, 0]}
            scale={[1.02, 1, 1.02]}
          />
        </group>
        <OrthographicCamera
          name="1"
          makeDefault={true}
          zoom={1}
          far={100000}
          near={-100000}
          position={[82.85, 112.79, 990.16]}
          rotation={[-0.11, 0.08, 0.01]}
          scale={1}
        />
      </group>
    </>
  );
}
function to(rotation: three.Euler, arg1: { x: number }, arg2: number) {
  throw new Error("Function not implemented.");
}
